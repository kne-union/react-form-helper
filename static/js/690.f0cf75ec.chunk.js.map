{"version":3,"file":"static/js/690.f0cf75ec.chunk.js","mappings":"kMAIA,MCJsE,GAAgBA,gBDIjE,CACjBC,KAAM,oBACNC,QAAS,iGACTC,YAAa,iDACbC,YAAa,yBACbC,IAAK,GACLC,QAAS,CACLC,QAAQ,EACRC,UAAW,0BACXC,MAAO,GACPC,KAAM,CAAC,CACXC,MAAO,2BACPR,YAAa,kEACbS,KAAM,k1GAgGNC,MAAO,CAAC,CACRZ,KAAM,mBACNG,YAAa,qCACbU,U,SACF,CACEb,KAAM,OACNG,YAAa,OACbU,U,UACF,CACEb,KAAM,aACNG,YAAa,kBACbU,U,UACF,CACEb,KAAM,eACNG,YAAa,qBACbU,U,gBC/HSC,EAAW,CAAC,KAAO,oBAAoB,QAAU,QAAQ,gBAAe,EAAK,aAAa,qBAAqB,QAAU,CAAC,CAAC,KAAO,oBAAoB,QAAU,wDAAwD,YAAc,iDAAmB,YAAc,2B","sources":["../../README.md","../node_modules/readme/modules.js"],"sourcesContent":["import * as component_1 from '@kne/current-lib_react-form-helper';\nimport * as component_2 from 'antd';\nimport * as component_3 from '@kne/react-form';\nimport * as component_4 from '@kne/remote-loader';\nconst readmeConfig = {\n    name: `react-form-helper`,\n    summary: `<p>桥接UI组件库的Form输入组件和@kne/react-form</p>`,\n    description: `react-form的辅助工具包`,\n    packageName: `@kne/react-form-helper`,\n    api: ``,\n    example: {\n        isFull: true,\n        className: `react_form_helper_eafaf`,\n        style: ``,\n        list: [{\n    title: `基本示例`,\n    description: `简单的form到input组件的绑定`,\n    code: `const { createWithRemoteLoader } = remoteLoader;\nconst { hooks, widget, utils } = _ReactFormHelper;\nconst { default: Form, useSubmit } = _ReactForm;\nconst { Input: InputField, Button, Flex } = antd;\n\nconst { useDecorator } = hooks;\nconst { EnterSubmit, FormStore, ScrollToError } = widget;\n\nconst Input = (props) => {\n  const render = useDecorator(Object.assign({ placeholder: \\`请输入\\${props.label}\\` }, props));\n  return render(InputField);\n};\n\nconst SubmitButton = ({ type = 'primary', realTime, realtime, disabled = false, ...props }) => {\n  const { isPass, isLoading, ...submitProps } = useSubmit(props);\n  if (typeof realTime === 'boolean') {\n    console.error(\\`warning: realTime参数已废弃，请使用realtime，后续版本可能回删除realTime的支持\\`);\n  }\n  return (<Button type={type} loading={isLoading}\n                  disabled={disabled || (realtime ? !isPass : false)} {...props} {...submitProps} />);\n};\n\nconst BaseExample = createWithRemoteLoader({\n  modules: ['InfoPage', 'Modal@useConfirmModal']\n})(({ remoteModules }) => {\n  const [InfoPage, useConfirmModal] = remoteModules;\n  const modal = useConfirmModal();\n  const formInner = <Flex vertical gap=\"middle\">\n    <Input name=\"name\" label=\"名称\" rule=\"REQ LEN-0-10\" />\n    <Input name=\"email\" label=\"邮箱\" rule=\"REQ EMAIL\" />\n    <SubmitButton>提交</SubmitButton>\n  </Flex>;\n  return <InfoPage>\n    <InfoPage.Part title=\"简单表单\">\n      <Form onSubmit={(data) => {\n        modal({\n          type: 'info', message: JSON.stringify(data, null, 2)\n        });\n      }}>\n        {formInner}\n      </Form>\n    </InfoPage.Part>\n    <InfoPage.Part title=\"自动滚动到错误位置\">\n      <Form onSubmit={(data) => {\n        modal({\n          type: 'info', message: JSON.stringify(data, null, 2)\n        });\n      }} onError={(errors) => {\n        modal({\n          type: 'error',\n          message: JSON.stringify(errors.map((item) => ({ label: item.label, errMsg: item.errMsg })), null, 2)\n        });\n      }}>\n        <ScrollToError />\n        {formInner}\n      </Form>\n    </InfoPage.Part>\n    <InfoPage.Part title=\"回车提交表单\">\n      <Form onSubmit={(data) => {\n        modal({\n          type: 'info', message: JSON.stringify(data, null, 2)\n        });\n      }} onError={(errors) => {\n        modal({\n          type: 'error',\n          message: JSON.stringify(errors.map((item) => ({ label: item.label, errMsg: item.errMsg })), null, 2)\n        });\n      }}>\n        <EnterSubmit>\n          {formInner}\n        </EnterSubmit>\n      </Form>\n    </InfoPage.Part>\n    <InfoPage.Part title=\"表单缓存\">\n      <Form onSubmit={(data) => {\n        modal({\n          type: 'info', message: JSON.stringify(data, null, 2)\n        });\n      }} onError={(errors) => {\n        modal({\n          type: 'error',\n          message: JSON.stringify(errors.map((item) => ({ label: item.label, errMsg: item.errMsg })), null, 2)\n        });\n      }}>\n        <FormStore cache=\"test-form-cache\" />\n        <EnterSubmit>\n          {formInner}\n        </EnterSubmit>\n      </Form>\n    </InfoPage.Part>\n  </InfoPage>;\n});\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_ReactFormHelper\",\n    packageName: \"@kne/current-lib_react-form-helper\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_2\n},{\n    name: \"_ReactForm\",\n    packageName: \"@kne/react-form\",\n    component: component_3\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_4\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import ReactFormHelper from '@components/react-form-helper/README.md';export default {ReactFormHelper};\nexport const manifest = {\"name\":\"react-form-helper\",\"version\":\"3.0.2\",\"open-version\":true,\"public-url\":\"/react-form-helper\",\"modules\":[{\"name\":\"react-form-helper\",\"baseDir\":\"/home/runner/work/react-form-helper/react-form-helper\",\"description\":\"react-form的辅助工具包\",\"packageName\":\"@kne/react-form-helper\"}]};"],"names":["ReactFormHelper","name","summary","description","packageName","api","example","isFull","className","style","list","title","code","scope","component","manifest"],"sourceRoot":""}